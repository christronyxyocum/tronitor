# Define script options
cmdline() {
  local arg=
  local local_args
  local OPTERR=0
  for arg
  do
    local delim=""
    case "${arg}" in
      # Translate --gnu-long-options to -g (short options)
      --stats)      local_args="${local_args}-s " ;;
      --list)       local_args="${local_args}-l " ;;
      --find)       local_args="${local_args}-f " ;;
      --no-prompt)  local_args="${local_args}-n " ;;
      --webhook)    local_args="${local_args}-w " ;;
      --info)       local_args="${local_args}-i " ;;
      --alerts)     local_args="${local_args}-a " ;;
      --create)     local_args="${local_args}-c " ;;
      --pause)      local_args="${local_args}-p " ;;
      --unpause)    local_args="${local_args}-u " ;;
      --reset)      local_args="${local_args}-r " ;;
      --delete)     local_args="${local_args}-d " ;;
      --help)       local_args="${local_args}-h " ;;
      # Pass through anything else
      *) [[ "${arg:0:1}" == "-" ]] || delim="\""
        local_args="${local_args:-}${delim}${arg}${delim} " ;;
    esac
  done

  # Reset the positional parameters to the short options
  eval set -- "${local_args:-}"

  while getopts "hslfnwai:c:r:d:p:u:" OPTION
    do
    case "$OPTION" in
      s)
        stats=true
        ;;
      l)
        list=true
        ;;
      f)
        find=true
        prompt=true
        ;;
      n)
        find=true
        prompt=false
        ;;
      w)
        find=true
        prompt=false
        webhook=true
        ;;
      a)
        alerts=true
        ;;
      i)
        info=true
        infoType="${OPTARG}"
        ;;
      c)
        create=true
        createType="${OPTARG}"
        ;;
      r)
        reset=true
        resetType="${OPTARG}"
        ;;
      d)
        delete=true
        deleteType="${OPTARG}"
        ;;
      p)
        pause=true
        pauseType="${OPTARG}"
        ;;
      u)
        unpause=true
        unpauseType="${OPTARG}"
        ;;
      h)
        usage
        exit
        ;;
      *)
        if [[ "${arg}" == '-p' || "${arg}" == '-u' || "${arg}" == '-r' || "${arg}" == '-d' || "${arg}" == '-i' || "${arg}" == '-c' ]] && [[ -z "${OPTARG}" ]]; then
          echo -e "${red}Option ${arg} requires an argument!${endColor}"
        else
          echo -e "${red}You are specifying a non-existent option!${endColor}"
        fi
        usage
        exit
        ;;
    esac
  done
  return 0
}
